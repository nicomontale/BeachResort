{"ast":null,"code":"import _defineProperty from \"/Users/nicolamontaleone/Desktop/React/BeachResort/beach_resort/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/nicolamontaleone/Desktop/React/BeachResort/beach_resort/src/context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); //<RoomContext.Provider value={'hello'}\n\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRomm: [],\n      featuredRooms: [],\n      loading: false,\n      type: 'all',\n      //searching\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxSize: 0,\n      maxPrice: 0,\n      minSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const type = event.target.type;\n      const name = event.target.name;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: value\n      }, this.filterRoom);\n    };\n\n    this.filterRoom = () => {\n      console.log(\"hi\");\n    };\n  }\n\n  // function getData\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRomm: rooms,\n      loading: true,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), \"}\");\n  };\n}\nexport { RoomConsumer, RoomProvider, RoomContext };","map":{"version":3,"sources":["/Users/nicolamontaleone/Desktop/React/BeachResort/beach_resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRomm","featuredRooms","loading","type","capacity","price","minPrice","maxSize","maxPrice","minSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","name","value","checked","setState","filterRoom","console","log","componentDidMount","formatData","filter","featured","Math","max","map","item","size","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from './data';\nconst RoomContext = React.createContext();\n\n//<RoomContext.Provider value={'hello'}\nexport default class RoomProvider extends Component {\n    state = {\n        rooms: [],\n        sortedRomm: [],\n        featuredRooms: [],\n        loading: false,\n        type:'all', //searching\n            capacity:1,\n            price:0,\n            minPrice:0,\n            maxSize:0,\n            maxPrice:0,\n            minSize:0,\n            breakfast:false,\n            pets: false\n\n    }\n\n    // function getData\n    componentDidMount() {\n        let rooms = this.formatData(items);\n\n        let featuredRooms = rooms.filter(room => room.featured === true);\n        let maxPrice = Math.max(...rooms.map(item=> \n            item.price));\n         let maxSize = Math.max(...rooms.map(item=> \n                item.size));\n              \n\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRomm: rooms,\n            loading: true,\n            maxPrice,\n            maxSize\n            \n        })\n    }\n\n    formatData(items) {\n        let tempItems = items.map(item => {\n            let id = item.sys.id;\n            let images = item.fields.images.map(image =>\n                image.fields.file.url);\n            let room = { ...item.fields, images, id };\n            return room;\n\n\n        });\n        return tempItems\n    }\n    getRoom = (slug) => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug === slug);\n        return room;\n\n    }\n\n    handleChange = event => {\n        const type = event.target.type\n        const name = event.target.name\n        const value = event.type === 'checkbox' ? target.checked : target.value;\n       this.setState({\n           [name] : value\n\n       }, this.filterRoom)\n        \n    }\n    filterRoom = ()=> {\n        console.log(\"hi\");\n    }\n    render() {\n        return <RoomContext.Provider value={{ ...this.state, getRoom: this.getRoom }}>\n            {this.props.children}\n\n        </RoomContext.Provider>\n\n\n    }\n}\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component){\n           return function ConsumerWrapper(props) {\n               return <RoomConsumer>\n               {value=> <Component {...props} context={value}/>}               \n                }\n               \n               </RoomConsumer>\n           }\n\n}\nexport { RoomConsumer, RoomProvider, RoomContext }"]},"metadata":{},"sourceType":"module"}